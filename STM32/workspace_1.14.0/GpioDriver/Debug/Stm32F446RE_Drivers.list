
Stm32F446RE_Drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000004f4  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080006b8  080006c0  000106c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080006b8  080006b8  000106c0  2**0
                  CONTENTS
  4 .ARM          00000000  080006b8  080006b8  000106c0  2**0
                  CONTENTS
  5 .preinit_array 00000000  080006b8  080006c0  000106c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080006b8  080006b8  000106b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080006bc  080006bc  000106bc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000106c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080006c0  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080006c0  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  000106c0  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  000106ea  2**0
                  CONTENTS, READONLY
 13 .debug_info   000008ab  00000000  00000000  0001072d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000234  00000000  00000000  00010fd8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000b8  00000000  00000000  00011210  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000007e  00000000  00000000  000112c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000023c6  00000000  00000000  00011346  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000d14  00000000  00000000  0001370c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000095de  00000000  00000000  00014420  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000224  00000000  00000000  0001da00  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000060  00000000  00000000  0001dc24  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	080006a0 	.word	0x080006a0

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	080006a0 	.word	0x080006a0

08000204 <GPIO_PeripheralClkCtrl>:

#include "stm32f446xx_gpio_driver.h"


void GPIO_PeripheralClkCtrl(GPIO_RegDef_t *pGPIOx, uint8_t EnOrDi)
{
 8000204:	b480      	push	{r7}
 8000206:	b083      	sub	sp, #12
 8000208:	af00      	add	r7, sp, #0
 800020a:	6078      	str	r0, [r7, #4]
 800020c:	460b      	mov	r3, r1
 800020e:	70fb      	strb	r3, [r7, #3]
	if(EnOrDi == ENABLE)
 8000210:	78fb      	ldrb	r3, [r7, #3]
 8000212:	2b01      	cmp	r3, #1
 8000214:	d157      	bne.n	80002c6 <GPIO_PeripheralClkCtrl+0xc2>
	{
		if(pGPIOx == GPIOA)
 8000216:	687b      	ldr	r3, [r7, #4]
 8000218:	4a59      	ldr	r2, [pc, #356]	; (8000380 <GPIO_PeripheralClkCtrl+0x17c>)
 800021a:	4293      	cmp	r3, r2
 800021c:	d106      	bne.n	800022c <GPIO_PeripheralClkCtrl+0x28>
		{
			GPIOA_PERI_CLK_EN();
 800021e:	4b59      	ldr	r3, [pc, #356]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 8000220:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000222:	4a58      	ldr	r2, [pc, #352]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 8000224:	f043 0301 	orr.w	r3, r3, #1
 8000228:	6313      	str	r3, [r2, #48]	; 0x30
		else if(pGPIOx == GPIOH)
		{
			GPIOH_PERI_CLK_DI();
		}
	}
}
 800022a:	e0a3      	b.n	8000374 <GPIO_PeripheralClkCtrl+0x170>
		else if(pGPIOx == GPIOB)
 800022c:	687b      	ldr	r3, [r7, #4]
 800022e:	4a56      	ldr	r2, [pc, #344]	; (8000388 <GPIO_PeripheralClkCtrl+0x184>)
 8000230:	4293      	cmp	r3, r2
 8000232:	d106      	bne.n	8000242 <GPIO_PeripheralClkCtrl+0x3e>
			GPIOB_PERI_CLK_EN();
 8000234:	4b53      	ldr	r3, [pc, #332]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 8000236:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000238:	4a52      	ldr	r2, [pc, #328]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 800023a:	f043 0302 	orr.w	r3, r3, #2
 800023e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000240:	e098      	b.n	8000374 <GPIO_PeripheralClkCtrl+0x170>
		else if(pGPIOx == GPIOC)
 8000242:	687b      	ldr	r3, [r7, #4]
 8000244:	4a51      	ldr	r2, [pc, #324]	; (800038c <GPIO_PeripheralClkCtrl+0x188>)
 8000246:	4293      	cmp	r3, r2
 8000248:	d106      	bne.n	8000258 <GPIO_PeripheralClkCtrl+0x54>
			GPIOC_PERI_CLK_EN();
 800024a:	4b4e      	ldr	r3, [pc, #312]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 800024c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800024e:	4a4d      	ldr	r2, [pc, #308]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 8000250:	f043 0304 	orr.w	r3, r3, #4
 8000254:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000256:	e08d      	b.n	8000374 <GPIO_PeripheralClkCtrl+0x170>
		else if(pGPIOx == GPIOD)
 8000258:	687b      	ldr	r3, [r7, #4]
 800025a:	4a4d      	ldr	r2, [pc, #308]	; (8000390 <GPIO_PeripheralClkCtrl+0x18c>)
 800025c:	4293      	cmp	r3, r2
 800025e:	d106      	bne.n	800026e <GPIO_PeripheralClkCtrl+0x6a>
			GPIOD_PERI_CLK_EN();
 8000260:	4b48      	ldr	r3, [pc, #288]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 8000262:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000264:	4a47      	ldr	r2, [pc, #284]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 8000266:	f043 0308 	orr.w	r3, r3, #8
 800026a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800026c:	e082      	b.n	8000374 <GPIO_PeripheralClkCtrl+0x170>
		else if(pGPIOx == GPIOE)
 800026e:	687b      	ldr	r3, [r7, #4]
 8000270:	4a48      	ldr	r2, [pc, #288]	; (8000394 <GPIO_PeripheralClkCtrl+0x190>)
 8000272:	4293      	cmp	r3, r2
 8000274:	d106      	bne.n	8000284 <GPIO_PeripheralClkCtrl+0x80>
			GPIOE_PERI_CLK_EN();
 8000276:	4b43      	ldr	r3, [pc, #268]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 8000278:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800027a:	4a42      	ldr	r2, [pc, #264]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 800027c:	f043 0310 	orr.w	r3, r3, #16
 8000280:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000282:	e077      	b.n	8000374 <GPIO_PeripheralClkCtrl+0x170>
		else if(pGPIOx == GPIOF)
 8000284:	687b      	ldr	r3, [r7, #4]
 8000286:	4a44      	ldr	r2, [pc, #272]	; (8000398 <GPIO_PeripheralClkCtrl+0x194>)
 8000288:	4293      	cmp	r3, r2
 800028a:	d106      	bne.n	800029a <GPIO_PeripheralClkCtrl+0x96>
			GPIOF_PERI_CLK_EN();
 800028c:	4b3d      	ldr	r3, [pc, #244]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 800028e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000290:	4a3c      	ldr	r2, [pc, #240]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 8000292:	f043 0320 	orr.w	r3, r3, #32
 8000296:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000298:	e06c      	b.n	8000374 <GPIO_PeripheralClkCtrl+0x170>
		else if(pGPIOx == GPIOG)
 800029a:	687b      	ldr	r3, [r7, #4]
 800029c:	4a3f      	ldr	r2, [pc, #252]	; (800039c <GPIO_PeripheralClkCtrl+0x198>)
 800029e:	4293      	cmp	r3, r2
 80002a0:	d106      	bne.n	80002b0 <GPIO_PeripheralClkCtrl+0xac>
			GPIOG_PERI_CLK_EN();
 80002a2:	4b38      	ldr	r3, [pc, #224]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 80002a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002a6:	4a37      	ldr	r2, [pc, #220]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 80002a8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80002ac:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002ae:	e061      	b.n	8000374 <GPIO_PeripheralClkCtrl+0x170>
		else if(pGPIOx == GPIOH)
 80002b0:	687b      	ldr	r3, [r7, #4]
 80002b2:	4a3b      	ldr	r2, [pc, #236]	; (80003a0 <GPIO_PeripheralClkCtrl+0x19c>)
 80002b4:	4293      	cmp	r3, r2
 80002b6:	d15d      	bne.n	8000374 <GPIO_PeripheralClkCtrl+0x170>
			GPIOH_PERI_CLK_EN();
 80002b8:	4b32      	ldr	r3, [pc, #200]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 80002ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002bc:	4a31      	ldr	r2, [pc, #196]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 80002be:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80002c2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002c4:	e056      	b.n	8000374 <GPIO_PeripheralClkCtrl+0x170>
		if(pGPIOx == GPIOA)
 80002c6:	687b      	ldr	r3, [r7, #4]
 80002c8:	4a2d      	ldr	r2, [pc, #180]	; (8000380 <GPIO_PeripheralClkCtrl+0x17c>)
 80002ca:	4293      	cmp	r3, r2
 80002cc:	d106      	bne.n	80002dc <GPIO_PeripheralClkCtrl+0xd8>
			GPIOA_PERI_CLK_DI();
 80002ce:	4b2d      	ldr	r3, [pc, #180]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 80002d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002d2:	4a2c      	ldr	r2, [pc, #176]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 80002d4:	f023 0301 	bic.w	r3, r3, #1
 80002d8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002da:	e04b      	b.n	8000374 <GPIO_PeripheralClkCtrl+0x170>
		else if(pGPIOx == GPIOB)
 80002dc:	687b      	ldr	r3, [r7, #4]
 80002de:	4a2a      	ldr	r2, [pc, #168]	; (8000388 <GPIO_PeripheralClkCtrl+0x184>)
 80002e0:	4293      	cmp	r3, r2
 80002e2:	d106      	bne.n	80002f2 <GPIO_PeripheralClkCtrl+0xee>
			GPIOB_PERI_CLK_DI();
 80002e4:	4b27      	ldr	r3, [pc, #156]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 80002e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002e8:	4a26      	ldr	r2, [pc, #152]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 80002ea:	f023 0302 	bic.w	r3, r3, #2
 80002ee:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002f0:	e040      	b.n	8000374 <GPIO_PeripheralClkCtrl+0x170>
		else if(pGPIOx == GPIOC)
 80002f2:	687b      	ldr	r3, [r7, #4]
 80002f4:	4a25      	ldr	r2, [pc, #148]	; (800038c <GPIO_PeripheralClkCtrl+0x188>)
 80002f6:	4293      	cmp	r3, r2
 80002f8:	d106      	bne.n	8000308 <GPIO_PeripheralClkCtrl+0x104>
			GPIOC_PERI_CLK_DI();
 80002fa:	4b22      	ldr	r3, [pc, #136]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 80002fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002fe:	4a21      	ldr	r2, [pc, #132]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 8000300:	f023 0304 	bic.w	r3, r3, #4
 8000304:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000306:	e035      	b.n	8000374 <GPIO_PeripheralClkCtrl+0x170>
		else if(pGPIOx == GPIOD)
 8000308:	687b      	ldr	r3, [r7, #4]
 800030a:	4a21      	ldr	r2, [pc, #132]	; (8000390 <GPIO_PeripheralClkCtrl+0x18c>)
 800030c:	4293      	cmp	r3, r2
 800030e:	d106      	bne.n	800031e <GPIO_PeripheralClkCtrl+0x11a>
			GPIOD_PERI_CLK_DI();
 8000310:	4b1c      	ldr	r3, [pc, #112]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 8000312:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000314:	4a1b      	ldr	r2, [pc, #108]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 8000316:	f023 0308 	bic.w	r3, r3, #8
 800031a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800031c:	e02a      	b.n	8000374 <GPIO_PeripheralClkCtrl+0x170>
		else if(pGPIOx == GPIOE)
 800031e:	687b      	ldr	r3, [r7, #4]
 8000320:	4a1c      	ldr	r2, [pc, #112]	; (8000394 <GPIO_PeripheralClkCtrl+0x190>)
 8000322:	4293      	cmp	r3, r2
 8000324:	d106      	bne.n	8000334 <GPIO_PeripheralClkCtrl+0x130>
			GPIOE_PERI_CLK_DI();
 8000326:	4b17      	ldr	r3, [pc, #92]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 8000328:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800032a:	4a16      	ldr	r2, [pc, #88]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 800032c:	f023 0310 	bic.w	r3, r3, #16
 8000330:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000332:	e01f      	b.n	8000374 <GPIO_PeripheralClkCtrl+0x170>
		else if(pGPIOx == GPIOF)
 8000334:	687b      	ldr	r3, [r7, #4]
 8000336:	4a18      	ldr	r2, [pc, #96]	; (8000398 <GPIO_PeripheralClkCtrl+0x194>)
 8000338:	4293      	cmp	r3, r2
 800033a:	d106      	bne.n	800034a <GPIO_PeripheralClkCtrl+0x146>
			GPIOF_PERI_CLK_DI();
 800033c:	4b11      	ldr	r3, [pc, #68]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 800033e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000340:	4a10      	ldr	r2, [pc, #64]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 8000342:	f023 0320 	bic.w	r3, r3, #32
 8000346:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000348:	e014      	b.n	8000374 <GPIO_PeripheralClkCtrl+0x170>
		else if(pGPIOx == GPIOG)
 800034a:	687b      	ldr	r3, [r7, #4]
 800034c:	4a13      	ldr	r2, [pc, #76]	; (800039c <GPIO_PeripheralClkCtrl+0x198>)
 800034e:	4293      	cmp	r3, r2
 8000350:	d106      	bne.n	8000360 <GPIO_PeripheralClkCtrl+0x15c>
			GPIOG_PERI_CLK_DI();
 8000352:	4b0c      	ldr	r3, [pc, #48]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 8000354:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000356:	4a0b      	ldr	r2, [pc, #44]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 8000358:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800035c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800035e:	e009      	b.n	8000374 <GPIO_PeripheralClkCtrl+0x170>
		else if(pGPIOx == GPIOH)
 8000360:	687b      	ldr	r3, [r7, #4]
 8000362:	4a0f      	ldr	r2, [pc, #60]	; (80003a0 <GPIO_PeripheralClkCtrl+0x19c>)
 8000364:	4293      	cmp	r3, r2
 8000366:	d105      	bne.n	8000374 <GPIO_PeripheralClkCtrl+0x170>
			GPIOH_PERI_CLK_DI();
 8000368:	4b06      	ldr	r3, [pc, #24]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 800036a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800036c:	4a05      	ldr	r2, [pc, #20]	; (8000384 <GPIO_PeripheralClkCtrl+0x180>)
 800036e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000372:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000374:	bf00      	nop
 8000376:	370c      	adds	r7, #12
 8000378:	46bd      	mov	sp, r7
 800037a:	bc80      	pop	{r7}
 800037c:	4770      	bx	lr
 800037e:	bf00      	nop
 8000380:	40020000 	.word	0x40020000
 8000384:	40023800 	.word	0x40023800
 8000388:	40020400 	.word	0x40020400
 800038c:	40020800 	.word	0x40020800
 8000390:	40020c00 	.word	0x40020c00
 8000394:	40021000 	.word	0x40021000
 8000398:	40021400 	.word	0x40021400
 800039c:	40021800 	.word	0x40021800
 80003a0:	40021c00 	.word	0x40021c00

080003a4 <GPIO_Inint>:



void GPIO_Inint(GPIOx_Handle_t *pGPIOHandle)
{
 80003a4:	b480      	push	{r7}
 80003a6:	b085      	sub	sp, #20
 80003a8:	af00      	add	r7, sp, #0
 80003aa:	6078      	str	r0, [r7, #4]

	uint32_t temp = 0;
 80003ac:	2300      	movs	r3, #0
 80003ae:	60fb      	str	r3, [r7, #12]

	//Configure GPIO MODE
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80003b0:	687b      	ldr	r3, [r7, #4]
 80003b2:	795b      	ldrb	r3, [r3, #5]
 80003b4:	2b03      	cmp	r3, #3
 80003b6:	d81e      	bhi.n	80003f6 <GPIO_Inint+0x52>
	{
		// Non Interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode) << ((pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) * 2);
 80003b8:	687b      	ldr	r3, [r7, #4]
 80003ba:	795b      	ldrb	r3, [r3, #5]
 80003bc:	461a      	mov	r2, r3
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	791b      	ldrb	r3, [r3, #4]
 80003c2:	005b      	lsls	r3, r3, #1
 80003c4:	fa02 f303 	lsl.w	r3, r2, r3
 80003c8:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->MODER &= ~(3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003ca:	687b      	ldr	r3, [r7, #4]
 80003cc:	681b      	ldr	r3, [r3, #0]
 80003ce:	681a      	ldr	r2, [r3, #0]
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	791b      	ldrb	r3, [r3, #4]
 80003d4:	4619      	mov	r1, r3
 80003d6:	2303      	movs	r3, #3
 80003d8:	408b      	lsls	r3, r1
 80003da:	43db      	mvns	r3, r3
 80003dc:	4619      	mov	r1, r3
 80003de:	687b      	ldr	r3, [r7, #4]
 80003e0:	681b      	ldr	r3, [r3, #0]
 80003e2:	400a      	ands	r2, r1
 80003e4:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	681b      	ldr	r3, [r3, #0]
 80003ea:	6819      	ldr	r1, [r3, #0]
 80003ec:	687b      	ldr	r3, [r7, #4]
 80003ee:	681b      	ldr	r3, [r3, #0]
 80003f0:	68fa      	ldr	r2, [r7, #12]
 80003f2:	430a      	orrs	r2, r1
 80003f4:	601a      	str	r2, [r3, #0]
	{
		//Interrupt Mode
	}

	//Configure SPEED
	temp = 0;
 80003f6:	2300      	movs	r3, #0
 80003f8:	60fb      	str	r3, [r7, #12]
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << ((pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) * 2);
 80003fa:	687b      	ldr	r3, [r7, #4]
 80003fc:	799b      	ldrb	r3, [r3, #6]
 80003fe:	461a      	mov	r2, r3
 8000400:	687b      	ldr	r3, [r7, #4]
 8000402:	791b      	ldrb	r3, [r3, #4]
 8000404:	005b      	lsls	r3, r3, #1
 8000406:	fa02 f303 	lsl.w	r3, r2, r3
 800040a:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800040c:	687b      	ldr	r3, [r7, #4]
 800040e:	681b      	ldr	r3, [r3, #0]
 8000410:	689a      	ldr	r2, [r3, #8]
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	791b      	ldrb	r3, [r3, #4]
 8000416:	4619      	mov	r1, r3
 8000418:	2303      	movs	r3, #3
 800041a:	408b      	lsls	r3, r1
 800041c:	43db      	mvns	r3, r3
 800041e:	4619      	mov	r1, r3
 8000420:	687b      	ldr	r3, [r7, #4]
 8000422:	681b      	ldr	r3, [r3, #0]
 8000424:	400a      	ands	r2, r1
 8000426:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDER |= temp;
 8000428:	687b      	ldr	r3, [r7, #4]
 800042a:	681b      	ldr	r3, [r3, #0]
 800042c:	6899      	ldr	r1, [r3, #8]
 800042e:	687b      	ldr	r3, [r7, #4]
 8000430:	681b      	ldr	r3, [r3, #0]
 8000432:	68fa      	ldr	r2, [r7, #12]
 8000434:	430a      	orrs	r2, r1
 8000436:	609a      	str	r2, [r3, #8]

	//Configure Pull up and pull down
	temp = 0;
 8000438:	2300      	movs	r3, #0
 800043a:	60fb      	str	r3, [r7, #12]
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdCtrl << ((pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) * 2);
 800043c:	687b      	ldr	r3, [r7, #4]
 800043e:	79db      	ldrb	r3, [r3, #7]
 8000440:	461a      	mov	r2, r3
 8000442:	687b      	ldr	r3, [r7, #4]
 8000444:	791b      	ldrb	r3, [r3, #4]
 8000446:	005b      	lsls	r3, r3, #1
 8000448:	fa02 f303 	lsl.w	r3, r2, r3
 800044c:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800044e:	687b      	ldr	r3, [r7, #4]
 8000450:	681b      	ldr	r3, [r3, #0]
 8000452:	68da      	ldr	r2, [r3, #12]
 8000454:	687b      	ldr	r3, [r7, #4]
 8000456:	791b      	ldrb	r3, [r3, #4]
 8000458:	4619      	mov	r1, r3
 800045a:	2303      	movs	r3, #3
 800045c:	408b      	lsls	r3, r1
 800045e:	43db      	mvns	r3, r3
 8000460:	4619      	mov	r1, r3
 8000462:	687b      	ldr	r3, [r7, #4]
 8000464:	681b      	ldr	r3, [r3, #0]
 8000466:	400a      	ands	r2, r1
 8000468:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 800046a:	687b      	ldr	r3, [r7, #4]
 800046c:	681b      	ldr	r3, [r3, #0]
 800046e:	68d9      	ldr	r1, [r3, #12]
 8000470:	687b      	ldr	r3, [r7, #4]
 8000472:	681b      	ldr	r3, [r3, #0]
 8000474:	68fa      	ldr	r2, [r7, #12]
 8000476:	430a      	orrs	r2, r1
 8000478:	60da      	str	r2, [r3, #12]

	//Configure output OPtype
	temp = 0;
 800047a:	2300      	movs	r3, #0
 800047c:	60fb      	str	r3, [r7, #12]
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800047e:	687b      	ldr	r3, [r7, #4]
 8000480:	7a1b      	ldrb	r3, [r3, #8]
 8000482:	461a      	mov	r2, r3
 8000484:	687b      	ldr	r3, [r7, #4]
 8000486:	791b      	ldrb	r3, [r3, #4]
 8000488:	fa02 f303 	lsl.w	r3, r2, r3
 800048c:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800048e:	687b      	ldr	r3, [r7, #4]
 8000490:	681b      	ldr	r3, [r3, #0]
 8000492:	685a      	ldr	r2, [r3, #4]
 8000494:	687b      	ldr	r3, [r7, #4]
 8000496:	791b      	ldrb	r3, [r3, #4]
 8000498:	4619      	mov	r1, r3
 800049a:	2301      	movs	r3, #1
 800049c:	408b      	lsls	r3, r1
 800049e:	43db      	mvns	r3, r3
 80004a0:	4619      	mov	r1, r3
 80004a2:	687b      	ldr	r3, [r7, #4]
 80004a4:	681b      	ldr	r3, [r3, #0]
 80004a6:	400a      	ands	r2, r1
 80004a8:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 80004aa:	687b      	ldr	r3, [r7, #4]
 80004ac:	681b      	ldr	r3, [r3, #0]
 80004ae:	6859      	ldr	r1, [r3, #4]
 80004b0:	687b      	ldr	r3, [r7, #4]
 80004b2:	681b      	ldr	r3, [r3, #0]
 80004b4:	68fa      	ldr	r2, [r7, #12]
 80004b6:	430a      	orrs	r2, r1
 80004b8:	605a      	str	r2, [r3, #4]


	//Configure pin alternate function
	temp = 0;
 80004ba:	2300      	movs	r3, #0
 80004bc:	60fb      	str	r3, [r7, #12]
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004be:	687b      	ldr	r3, [r7, #4]
 80004c0:	7a5b      	ldrb	r3, [r3, #9]
 80004c2:	461a      	mov	r2, r3
 80004c4:	687b      	ldr	r3, [r7, #4]
 80004c6:	791b      	ldrb	r3, [r3, #4]
 80004c8:	fa02 f303 	lsl.w	r3, r2, r3
 80004cc:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004ce:	687b      	ldr	r3, [r7, #4]
 80004d0:	681b      	ldr	r3, [r3, #0]
 80004d2:	685a      	ldr	r2, [r3, #4]
 80004d4:	687b      	ldr	r3, [r7, #4]
 80004d6:	791b      	ldrb	r3, [r3, #4]
 80004d8:	4619      	mov	r1, r3
 80004da:	2301      	movs	r3, #1
 80004dc:	408b      	lsls	r3, r1
 80004de:	43db      	mvns	r3, r3
 80004e0:	4619      	mov	r1, r3
 80004e2:	687b      	ldr	r3, [r7, #4]
 80004e4:	681b      	ldr	r3, [r3, #0]
 80004e6:	400a      	ands	r2, r1
 80004e8:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	681b      	ldr	r3, [r3, #0]
 80004ee:	6859      	ldr	r1, [r3, #4]
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	681b      	ldr	r3, [r3, #0]
 80004f4:	68fa      	ldr	r2, [r7, #12]
 80004f6:	430a      	orrs	r2, r1
 80004f8:	605a      	str	r2, [r3, #4]

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 80004fa:	687b      	ldr	r3, [r7, #4]
 80004fc:	795b      	ldrb	r3, [r3, #5]
 80004fe:	2b02      	cmp	r3, #2
 8000500:	d131      	bne.n	8000566 <GPIO_Inint+0x1c2>
	{
		uint8_t temp1, temp2;
		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 8000502:	687b      	ldr	r3, [r7, #4]
 8000504:	791b      	ldrb	r3, [r3, #4]
 8000506:	08db      	lsrs	r3, r3, #3
 8000508:	72fb      	strb	r3, [r7, #11]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 800050a:	687b      	ldr	r3, [r7, #4]
 800050c:	791b      	ldrb	r3, [r3, #4]
 800050e:	f003 0307 	and.w	r3, r3, #7
 8000512:	72bb      	strb	r3, [r7, #10]

		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2));
 8000514:	687b      	ldr	r3, [r7, #4]
 8000516:	681b      	ldr	r3, [r3, #0]
 8000518:	7afa      	ldrb	r2, [r7, #11]
 800051a:	3208      	adds	r2, #8
 800051c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000520:	7abb      	ldrb	r3, [r7, #10]
 8000522:	009b      	lsls	r3, r3, #2
 8000524:	220f      	movs	r2, #15
 8000526:	fa02 f303 	lsl.w	r3, r2, r3
 800052a:	43db      	mvns	r3, r3
 800052c:	4618      	mov	r0, r3
 800052e:	687b      	ldr	r3, [r7, #4]
 8000530:	681b      	ldr	r3, [r3, #0]
 8000532:	7afa      	ldrb	r2, [r7, #11]
 8000534:	4001      	ands	r1, r0
 8000536:	3208      	adds	r2, #8
 8000538:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2));
 800053c:	687b      	ldr	r3, [r7, #4]
 800053e:	681b      	ldr	r3, [r3, #0]
 8000540:	7afa      	ldrb	r2, [r7, #11]
 8000542:	3208      	adds	r2, #8
 8000544:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000548:	687b      	ldr	r3, [r7, #4]
 800054a:	7a5b      	ldrb	r3, [r3, #9]
 800054c:	461a      	mov	r2, r3
 800054e:	7abb      	ldrb	r3, [r7, #10]
 8000550:	009b      	lsls	r3, r3, #2
 8000552:	fa02 f303 	lsl.w	r3, r2, r3
 8000556:	4618      	mov	r0, r3
 8000558:	687b      	ldr	r3, [r7, #4]
 800055a:	681b      	ldr	r3, [r3, #0]
 800055c:	7afa      	ldrb	r2, [r7, #11]
 800055e:	4301      	orrs	r1, r0
 8000560:	3208      	adds	r2, #8
 8000562:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 8000566:	bf00      	nop
 8000568:	3714      	adds	r7, #20
 800056a:	46bd      	mov	sp, r7
 800056c:	bc80      	pop	{r7}
 800056e:	4770      	bx	lr

08000570 <GPIO_WriteToOutputPort>:
	}
}


void GPIO_WriteToOutputPort(GPIO_RegDef_t *pGPIOx, uint16_t Value)
{
 8000570:	b480      	push	{r7}
 8000572:	b083      	sub	sp, #12
 8000574:	af00      	add	r7, sp, #0
 8000576:	6078      	str	r0, [r7, #4]
 8000578:	460b      	mov	r3, r1
 800057a:	807b      	strh	r3, [r7, #2]
	pGPIOx->ODR = Value;
 800057c:	887a      	ldrh	r2, [r7, #2]
 800057e:	687b      	ldr	r3, [r7, #4]
 8000580:	615a      	str	r2, [r3, #20]
}
 8000582:	bf00      	nop
 8000584:	370c      	adds	r7, #12
 8000586:	46bd      	mov	sp, r7
 8000588:	bc80      	pop	{r7}
 800058a:	4770      	bx	lr

0800058c <delay>:
#include <stdint.h>
#include <stdio.h>
#include "stm32f446xx_gpio_driver.h"

void delay()
{
 800058c:	b480      	push	{r7}
 800058e:	b083      	sub	sp, #12
 8000590:	af00      	add	r7, sp, #0
	for ( int i = 0;  i < 1000000; ++i);
 8000592:	2300      	movs	r3, #0
 8000594:	607b      	str	r3, [r7, #4]
 8000596:	e002      	b.n	800059e <delay+0x12>
 8000598:	687b      	ldr	r3, [r7, #4]
 800059a:	3301      	adds	r3, #1
 800059c:	607b      	str	r3, [r7, #4]
 800059e:	687b      	ldr	r3, [r7, #4]
 80005a0:	4a04      	ldr	r2, [pc, #16]	; (80005b4 <delay+0x28>)
 80005a2:	4293      	cmp	r3, r2
 80005a4:	ddf8      	ble.n	8000598 <delay+0xc>
}
 80005a6:	bf00      	nop
 80005a8:	bf00      	nop
 80005aa:	370c      	adds	r7, #12
 80005ac:	46bd      	mov	sp, r7
 80005ae:	bc80      	pop	{r7}
 80005b0:	4770      	bx	lr
 80005b2:	bf00      	nop
 80005b4:	000f423f 	.word	0x000f423f

080005b8 <main>:


int main(void)
{
 80005b8:	b580      	push	{r7, lr}
 80005ba:	b084      	sub	sp, #16
 80005bc:	af00      	add	r7, sp, #0
//	int count = 0;

	GPIOx_Handle_t gpioLed;

	gpioLed.pGPIOx = GPIOA;
 80005be:	4b10      	ldr	r3, [pc, #64]	; (8000600 <main+0x48>)
 80005c0:	607b      	str	r3, [r7, #4]
	gpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 80005c2:	2305      	movs	r3, #5
 80005c4:	723b      	strb	r3, [r7, #8]
	gpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 80005c6:	2301      	movs	r3, #1
 80005c8:	727b      	strb	r3, [r7, #9]
	gpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_OP_SPEED_HIGH;
 80005ca:	2303      	movs	r3, #3
 80005cc:	72bb      	strb	r3, [r7, #10]
	gpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 80005ce:	2300      	movs	r3, #0
 80005d0:	733b      	strb	r3, [r7, #12]
	gpioLed.GPIO_PinConfig.GPIO_PinPuPdCtrl = GPIO_NO_PUPD;
 80005d2:	2300      	movs	r3, #0
 80005d4:	72fb      	strb	r3, [r7, #11]

	GPIO_PeripheralClkCtrl(GPIOA, ENABLE);
 80005d6:	2101      	movs	r1, #1
 80005d8:	4809      	ldr	r0, [pc, #36]	; (8000600 <main+0x48>)
 80005da:	f7ff fe13 	bl	8000204 <GPIO_PeripheralClkCtrl>
	GPIO_Inint(&gpioLed);
 80005de:	1d3b      	adds	r3, r7, #4
 80005e0:	4618      	mov	r0, r3
 80005e2:	f7ff fedf 	bl	80003a4 <GPIO_Inint>
//		GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_5);
//		GPIO_WriteToOutputPin(GPIOA, GPIO_PIN_NO_5, GPIO_PIN_SET);
//		delay();
//		GPIO_WriteToOutputPin(GPIOA, GPIO_PIN_NO_5, GPIO_PIN_RESET);
//		delay();
		GPIO_WriteToOutputPort(GPIOA, 0x20);
 80005e6:	2120      	movs	r1, #32
 80005e8:	4805      	ldr	r0, [pc, #20]	; (8000600 <main+0x48>)
 80005ea:	f7ff ffc1 	bl	8000570 <GPIO_WriteToOutputPort>
		delay();
 80005ee:	f7ff ffcd 	bl	800058c <delay>
		GPIO_WriteToOutputPort(GPIOA, 0x00);
 80005f2:	2100      	movs	r1, #0
 80005f4:	4802      	ldr	r0, [pc, #8]	; (8000600 <main+0x48>)
 80005f6:	f7ff ffbb 	bl	8000570 <GPIO_WriteToOutputPort>
		delay();
 80005fa:	f7ff ffc7 	bl	800058c <delay>
		GPIO_WriteToOutputPort(GPIOA, 0x20);
 80005fe:	e7f2      	b.n	80005e6 <main+0x2e>
 8000600:	40020000 	.word	0x40020000

08000604 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000604:	480d      	ldr	r0, [pc, #52]	; (800063c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000606:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000608:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800060c:	480c      	ldr	r0, [pc, #48]	; (8000640 <LoopForever+0x6>)
  ldr r1, =_edata
 800060e:	490d      	ldr	r1, [pc, #52]	; (8000644 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000610:	4a0d      	ldr	r2, [pc, #52]	; (8000648 <LoopForever+0xe>)
  movs r3, #0
 8000612:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000614:	e002      	b.n	800061c <LoopCopyDataInit>

08000616 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000616:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000618:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800061a:	3304      	adds	r3, #4

0800061c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800061c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800061e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000620:	d3f9      	bcc.n	8000616 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000622:	4a0a      	ldr	r2, [pc, #40]	; (800064c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000624:	4c0a      	ldr	r4, [pc, #40]	; (8000650 <LoopForever+0x16>)
  movs r3, #0
 8000626:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000628:	e001      	b.n	800062e <LoopFillZerobss>

0800062a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800062a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800062c:	3204      	adds	r2, #4

0800062e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800062e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000630:	d3fb      	bcc.n	800062a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000632:	f000 f811 	bl	8000658 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000636:	f7ff ffbf 	bl	80005b8 <main>

0800063a <LoopForever>:

LoopForever:
  b LoopForever
 800063a:	e7fe      	b.n	800063a <LoopForever>
  ldr   r0, =_estack
 800063c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000640:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000644:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000648:	080006c0 	.word	0x080006c0
  ldr r2, =_sbss
 800064c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000650:	2000001c 	.word	0x2000001c

08000654 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000654:	e7fe      	b.n	8000654 <ADC_IRQHandler>
	...

08000658 <__libc_init_array>:
 8000658:	b570      	push	{r4, r5, r6, lr}
 800065a:	4d0d      	ldr	r5, [pc, #52]	; (8000690 <__libc_init_array+0x38>)
 800065c:	4c0d      	ldr	r4, [pc, #52]	; (8000694 <__libc_init_array+0x3c>)
 800065e:	1b64      	subs	r4, r4, r5
 8000660:	10a4      	asrs	r4, r4, #2
 8000662:	2600      	movs	r6, #0
 8000664:	42a6      	cmp	r6, r4
 8000666:	d109      	bne.n	800067c <__libc_init_array+0x24>
 8000668:	4d0b      	ldr	r5, [pc, #44]	; (8000698 <__libc_init_array+0x40>)
 800066a:	4c0c      	ldr	r4, [pc, #48]	; (800069c <__libc_init_array+0x44>)
 800066c:	f000 f818 	bl	80006a0 <_init>
 8000670:	1b64      	subs	r4, r4, r5
 8000672:	10a4      	asrs	r4, r4, #2
 8000674:	2600      	movs	r6, #0
 8000676:	42a6      	cmp	r6, r4
 8000678:	d105      	bne.n	8000686 <__libc_init_array+0x2e>
 800067a:	bd70      	pop	{r4, r5, r6, pc}
 800067c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000680:	4798      	blx	r3
 8000682:	3601      	adds	r6, #1
 8000684:	e7ee      	b.n	8000664 <__libc_init_array+0xc>
 8000686:	f855 3b04 	ldr.w	r3, [r5], #4
 800068a:	4798      	blx	r3
 800068c:	3601      	adds	r6, #1
 800068e:	e7f2      	b.n	8000676 <__libc_init_array+0x1e>
 8000690:	080006b8 	.word	0x080006b8
 8000694:	080006b8 	.word	0x080006b8
 8000698:	080006b8 	.word	0x080006b8
 800069c:	080006bc 	.word	0x080006bc

080006a0 <_init>:
 80006a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006a2:	bf00      	nop
 80006a4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006a6:	bc08      	pop	{r3}
 80006a8:	469e      	mov	lr, r3
 80006aa:	4770      	bx	lr

080006ac <_fini>:
 80006ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006ae:	bf00      	nop
 80006b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006b2:	bc08      	pop	{r3}
 80006b4:	469e      	mov	lr, r3
 80006b6:	4770      	bx	lr
